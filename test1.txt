function addModifiersInNewMG() {
  var modifierIds = [...document.querySelectorAll(".IsModifierChecked:checked")].map(x => parseInt(x.value, 10));

  $.ajax({
    url: "/Menu/selectedModifiers",
    data: { modifierIds: modifierIds },
    type: "POST",
    success: function (data) {
      // Close the 'Add Existing Modifiers' modal
      const existingModal = bootstrap.Modal.getInstance(document.getElementById('addExistingModifiers'));
      if (existingModal) {
        existingModal.hide();
      }

      // Ensure the correct modal is displayed
      const editModalEl = document.getElementById('EditModifierGroup');
      const addModalEl = document.getElementById('addModifierGroup1');
      
      if (editModalEl) {
        const editModal = bootstrap.Modal.getOrCreateInstance(editModalEl);
        editModal.show();
      } else if (addModalEl) {
        const addModal = bootstrap.Modal.getOrCreateInstance(addModalEl);
        addModal.show();
      }

      // Append selected modifiers to the correct modal
      data.modifiers.forEach((modifier) => {
        const modifierId = `modifier_${modifier.modifierid}`;
        if (!document.getElementById(modifierId)) {
          $(".addedModifiers").append(`
            <div id="${modifierId}">
              <span class="badge bg-white text-secondary me-2 mb-2 mt-2" style="border: 1px solid grey;">
                ${modifier.modifiername}
                <img src="/images/icons8-multiply-24.png" class="selectedModifiers"
                     onclick="discardModifier(${modifier.modifierid})"
                     style="width:10px;cursor:pointer;">
              </span>
              <input type="hidden" class="modifierId" value="${modifier.modifierid}" />
            </div>
          `);
          selectedModifiers.push(modifier.modifierid);
        }
      });
    },
    error: function () {
      alert("Failed to add modifiers.");
    }
  });
}
